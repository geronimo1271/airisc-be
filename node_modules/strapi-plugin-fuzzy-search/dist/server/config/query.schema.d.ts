import { InferType } from 'yup';
export declare const paginationSchema: import("yup/lib/object").OptionalObjectSchema<{
    pageSize: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
    page: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
    withCount: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
}, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<{
    pageSize: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
    page: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
    withCount: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
}>>;
export declare const populationSchema: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
export declare const querySchema: import("yup/lib/object").OptionalObjectSchema<{
    query: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
    locale: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
    filters: import("yup/lib/object").OptionalObjectSchema<{
        contentTypes: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
    }, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<{
        contentTypes: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
    }>>;
}, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<{
    query: import("yup/lib/string").RequiredStringSchema<string | undefined, import("yup/lib/types").AnyObject>;
    locale: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
    filters: import("yup/lib/object").OptionalObjectSchema<{
        contentTypes: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
    }, import("yup/lib/object").AnyObject, import("yup/lib/object").TypeOfShape<{
        contentTypes: import("yup").StringSchema<string | undefined, import("yup/lib/types").AnyObject, string | undefined>;
    }>>;
}>>;
export type PaginationBaseQuery = InferType<typeof paginationSchema>;
export type PopulationSchema = InferType<typeof populationSchema>;
type QuerySchema = InferType<typeof querySchema>;
export type SearchQuery = Omit<QuerySchema, 'filters'> & {
    pagination?: Record<string, PaginationBaseQuery>;
    populate?: Record<string, PopulationSchema>;
    filters?: QuerySchema['filters'] & Record<string, any>;
};
export {};
